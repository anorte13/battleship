(()=>{var t={519:(t,e,s)=>{const o=s(736),i=s(689);t.exports=class{constructor(t){this.board=t||[],this.missedAttacks=[],this.placedShips=[],this.board.length||this.createBoard()}createBoard(){this.board=Array(10).fill(null).map((()=>Array(10).fill(null)))}reciveAttack(t,e,s){let o=s[e][t];return null===o?(console.log("There was no target hit!"),this.missedAttacks.push({x:t,y:e}),!1):"object"==typeof o?(o.hit(),!o.isSunk()||(o.sunk=!0,void console.log(`Your ${o.name} has been sunk...`))):void 0}placeShip(t,e,s,a,r){let n=o(t);if(n.name=i(t,this.placedShips),"horizontal"===a&&e+t>10||"vertical"===a&&s+t>10)return console.log("Out of bounds"),!1;for(let o=0;o<t;o++)if("horizontal"===a&&null!==r[s][e+o]||"vertical"===a&&null!==r[s+o][e])return console.log("Ship is already placed in those coordinates"),!1;for(let o=0;o<t;o++)"horizontal"===a?r[s][e+o]=n:r[s+o][e]=n;this.placedShips.push(n)}checkShipSunk(){return this.placedShips.every((t=>t.sunk))}}},651:(t,e,s)=>{const o=s(519);t.exports=class{constructor(t){this.name="CPU",this.enemy=new o,this.ships=this.enemy.placedShips,this.enemyShips=[]}attack(t){let e=Math.floor(10*Math.random()+0),s=Math.floor(10*Math.random()+0),o=!1;this.enemyShips.forEach((t=>{t.X===e&&t.Y===s&&(console.log("You are attacking the same coordinates from last turn!"),o=!0)})),o||this.enemy.reciveAttack(e,s,t)&&(console.log("Successful hit on PLAYER ship!"),this.enemyShips.push({X:e,Y:s}))}addShip(t,e,s,o,i){this.enemy.placeShip(t,e,s,o,i),console.log("Ship was added to ENEMY board")}}},689:t=>{t.exports=(t,e)=>5===t?"Carrier":4===t?"Battleship":3===t?"Submarine":"Destroyer"},4:(t,e,s)=>{const o=s(519);t.exports=class{constructor(t){this.name=t,this.player=new o,this.ships=this.player.placedShips}attack(t,e,s){this.player.reciveAttack(t,e,s)&&console.log("Successful hit on ENEMY ship!")}addShip(t,e,s,o,i){this.player.placeShip(t,e,s,o,i),console.log("Ship was added to PLAYER board")}}},736:t=>{t.exports=t=>{const e={};return e.length=t,e.name="",e.hits=0,e.sunk=!1,e.hit=function(){if(e.isSunk())return!1;this.hits+=1,console.log(`Current hits on this ${e.name} : ${this.hits}`)},e.isSunk=function(){return this.hits===this.length},e}}},e={};function s(o){var i=e[o];if(void 0!==i)return i.exports;var a=e[o]={exports:{}};return t[o](a,a.exports,s),a.exports}(()=>{const t=s(4),e=new(s(651)),o=new t;o.addShip(5,0,0,"horizontal",o.player.board),e.addShip(5,0,0,"horizontal",e.enemy.board),e.attack(o.player.board),e.attack(o.player.board)})()})();